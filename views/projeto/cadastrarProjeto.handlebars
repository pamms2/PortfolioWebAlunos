<h2 class="mb-5 text-center text-primary fw-bold">Cadastro de Projeto</h2>

<form action="/cadastrarProjeto" method="post">
    <div class="form-group">
        <label for="inputNome">Nome</label>
        <input type="text" class="form-control" id="inputNome" name="nome">
    </div>
    <div class="form-group">
        <label for="inputResumo">Resumo</label>
        <textarea type="text" class="form-control" id="inputResumo" name="resumo" rows="5"></textarea>
    </div>
    <div class="form-group">
        <label for="inputLink">Link</label>
        <input type="text" class="form-control" id="inputLink" name="link">
    </div>
  
    <div class="form-group">
      <label>Palavras-Chave</label>
      <div id="palavras-container">
        <div class="input-group mb-2">
          <select class="form-control" name="palavrasChave[]">
            <option value="" disabled selected>Selecione uma palavra</option>
            {{#each palavras}}
              <option value="{{id}}">{{palavra}}</option>
            {{/each}}
          </select>
          <div class="input-group-append">
            <button type="button" class="btn btn-success addPalavraBtn">+</button>
          </div>
        </div>
      </div>
    </div>

    <div class="form-group">
      <label>Desenvolvedores</label>
      <div id="alunos-container">
        <div class="input-group mb-2">
          <input type="text" class="form-control aluno-input" placeholder="Digite o nome ou login do aluno">
          <input type="hidden" name="alunosId[]" class="aluno-id">
          <div class="input-group-append">
            <button type="button" class="btn btn-success addAlunoBtn">+</button>
          </div>
        </div>
      </div>
    </div>

    <ul id="sugestoes" class="list-group position-absolute" style="z-index:1000; max-height:150px; overflow:auto; width:100%; display:none;"></ul>

  <button type="submit" class="btn btn-primary">Cadastrar Projeto</button>
</form>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const container = document.getElementById('palavras-container');

  function atualizarBotoes() {
    const botoes = container.querySelectorAll('.addPalavraBtn');
    botoes.forEach((btn, index) => {
      if (index === botoes.length - 1) {
        btn.textContent = '+';
        btn.classList.remove('btn-danger');
        btn.classList.add('btn-success');
        btn.onclick = adicionarCampo;
      } else {
        btn.textContent = '–';
        btn.classList.remove('btn-success');
        btn.classList.add('btn-danger');
        btn.onclick = () => {
          btn.closest('.input-group').remove();
          atualizarBotoes();
        };
      }
    });
  }

  function adicionarCampo() {
    const primeiro = container.querySelector('.input-group');
    const novo = primeiro.cloneNode(true);
    novo.querySelector('select').selectedIndex = 0;
    container.appendChild(novo);
    atualizarBotoes();
  }

  atualizarBotoes();

  const containerAlunos = document.getElementById('alunos-container');
  const sugestoes = document.getElementById('sugestoes');

  function atualizarBotoesAlunos() {
    const botoes = containerAlunos.querySelectorAll('.addAlunoBtn');
    botoes.forEach((btn, index) => {
      if (index === botoes.length - 1) {
        btn.textContent = '+';
        btn.classList.remove('btn-danger');
        btn.classList.add('btn-success');
        btn.onclick = adicionarCampoAluno;
      } else {
        btn.textContent = '–';
        btn.classList.remove('btn-success');
        btn.classList.add('btn-danger');
        btn.onclick = () => {
          btn.closest('.input-group').remove();
          atualizarBotoesAlunos();
        };
      }
    });
  }

  function adicionarCampoAluno() {
    const primeiro = containerAlunos.querySelector('.input-group');
    const novo = primeiro.cloneNode(true);
    novo.querySelector('.aluno-input').value = '';
    novo.querySelector('.aluno-id').value = '';
    containerAlunos.appendChild(novo);
    atualizarBotoesAlunos();
    configurarAutoComplete(novo.querySelector('.aluno-input'));
  }

  function configurarAutoComplete(input) {
    input.addEventListener('input', async () => {
      const termo = input.value.trim();
      if (termo.length < 2) {
        sugestoes.style.display = 'none';
        return;
      }

      const resposta = await fetch(`/buscarAlunos?termo=${encodeURIComponent(termo)}`);
      const alunos = await resposta.json();

      sugestoes.innerHTML = '';
      alunos.forEach(a => {
        const li = document.createElement('li');
        li.className = 'list-group-item list-group-item-action';
        li.textContent = a.nome + (a.login ? ` (${a.login})` : '');
        li.onclick = () => {
          input.value = a.nome;
          input.closest('.input-group').querySelector('.aluno-id').value = a.id;
          sugestoes.style.display = 'none';
        };
        sugestoes.appendChild(li);
      });

      sugestoes.style.display = alunos.length ? 'block' : 'none';
    });

    // esconder sugestões ao clicar fora
    document.addEventListener('click', e => {
      if (!sugestoes.contains(e.target) && e.target !== input) {
        sugestoes.style.display = 'none';
      }
    });
  }

  // inicializa o primeiro campo
  configurarAutoComplete(document.querySelector('.aluno-input'));
  atualizarBotoesAlunos();

  const form = document.querySelector('form[action="/cadastrarProjeto"]');


  form.addEventListener('submit', function(event) {
      // --- Validação de Palvaras Duplicada ---
      const palavrasContainer = document.getElementById('palavras-container');
      const selectsPalavras = palavrasContainer.querySelectorAll('select[name="palavrasChave[]"]');

      const valoresPalavras = new Set();
      let temDuplicataPalavra = false;

      selectsPalavras.forEach(select => {
          const valor = select.value;
          // Ignora o "Selecione..." (valor vazio)
          if (valor) { 
              if (valoresPalavras.has(valor)) {
                  temDuplicataPalavra = true;
              }
              valoresPalavras.add(valor);
          }
      });

      // Se encontrou duplicata, MOSTRA O ALERTA e PARA O ENVIO
      if (temDuplicataPalavra) {
          alert('Erro: Você não pode adicionar a mesma palavra-chave mais de uma vez. Por favor, remova as duplicatas.');
          event.preventDefault();
          return;
      }

      // --- Validação de Alunos Duplicado ---
      const alunosContainer = document.getElementById('alunos-container');
      const selectsAlunos = alunosContainer.querySelectorAll('input[name="alunosId[]"]');

      const valoresAlunos = new Set();
      let temDuplicataAluno = false;

      selectsAlunos.forEach(input => {
          const valor = input.value;
          if (valor) { 
              if (valoresAlunos.has(valor)) {
                  temDuplicataAluno = true;
              }
              valoresAlunos.add(valor);
          }
      });

      if (temDuplicataAluno) {
          alert('Erro: Você não pode adicionar o mesmo desenvolvedor mais de uma vez. Por favor, remova as duplicatas.');
          event.preventDefault();
          return;
      }
  });

});
</script>