<form action="/editarProjeto" method="post">
    <input type="hidden" name="id" value={{projeto.id}}>
    <div class="form-group">
        <label for="inputNome">Nome</label>
        <input type="text" class="form-control" id="inputNome" name="nome" value="{{projeto.nome}}">
    </div>
    <div class="form-group">
        <label for="inputResumo">Resumo</label>
        <textarea type="text" class="form-control" id="inputResumo" name="resumo" rows="5">{{projeto.resumo}}</textarea>
    </div>
    <div class="form-group">
        <label for="inputLink">Link</label>
        <input type="text" class="form-control" id="inputLink" name="link"  value="{{projeto.link}}">
    </div>

    <div class="form-group">
        <label>Palavras-Chave</label>
        <div id="palavras-container">
            {{#each vinculadas}}
            <div class="input-group mb-2">
                <select class="form-control" name="palavrasChave[]">
                    <option value="" disabled>Selecione uma palavra</option>
                    {{#each ../palavras}}
                    <option value="{{this.id}}" {{#if (eq this.id ../id)}}selected{{/if}}>
                        {{this.palavra}}
                    </option>
                    {{/each}}
                </select>
                <div class="input-group-append">
                    <button type="button" class="btn btn-danger removePalavraBtn">–</button>
                </div>
            </div>
            {{/each}}
            <!-- Card vazio para adicionar nova palavra -->
            <div class="input-group mb-2">
                <select class="form-control" name="palavrasChave[]">
                    <option value="" selected disabled>Selecione uma palavra</option>
                    {{#each palavras}}
                    <option value="{{this.id}}">{{this.palavra}}</option>
                    {{/each}}
                </select>
                <div class="input-group-append">
                    <button type="button" class="btn btn-success addPalavraBtn">+</button>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group position-relative">
        <label>Desenvolvedores</label>
        <div id="alunos-container">
            {{#each alunosVinculados}}
            <div class="input-group mb-2 position-relative">
                <input type="text" class="form-control aluno-input" value="{{nome}}" placeholder="Pesquisar aluno por nome ou login">
                <input type="hidden" name="alunosId[]" class="aluno-id" value="{{id}}">
                <ul class="list-group position-absolute w-100 sugestoes" style="z-index:1000; display:none; max-height:150px; overflow:auto;"></ul>
                <div class="input-group-append">
                    <button type="button" class="btn btn-danger removeAlunoBtn">–</button>
                </div>
            </div>
            {{/each}}
            <!-- Card vazio para adicionar novo aluno -->
            <div class="input-group mb-2 position-relative">
                <input type="text" class="form-control aluno-input" placeholder="Pesquisar aluno por nome ou login">
                <input type="hidden" name="alunosId[]" class="aluno-id">
                <ul class="list-group position-absolute w-100 sugestoes" style="z-index:1000; display:none; max-height:150px; overflow:auto;"></ul>
                <div class="input-group-append">
                    <button type="button" class="btn btn-success addAlunoBtn">+</button>
                </div>
            </div>
        </div>
    </div>


    <button type="submit" class="btn btn-primary">Editar</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const alunoContainer = document.getElementById('alunos-container');
        const palavraContainer = document.getElementById('palavras-container');

        // Adicionar aluno
        function addAluno() {
            const ultimo = alunoContainer.querySelector('.input-group:last-child');
            const novo = ultimo.cloneNode(true);
            novo.querySelector('.aluno-input').value = '';
            novo.querySelector('.aluno-id').value = '';
            novo.querySelector('.sugestoes').innerHTML = '';
            alunoContainer.appendChild(novo);
            configurarAutoComplete(novo.querySelector('.aluno-input'));
            atualizarTodosAlunos();
        }

        function atualizarTodosAlunos() {
            const grupos = alunoContainer.querySelectorAll('.input-group');
            grupos.forEach((grupo, i) => {
                const btn = grupo.querySelector('.btn');
                if (i === grupos.length - 1) {
                    // último card = adicionar
                    btn.className = 'btn btn-success addAlunoBtn';
                    btn.textContent = '+';
                    btn.onclick = addAluno;
                } else {
                    // alunos existentes = remover
                    btn.className = 'btn btn-danger removeAlunoBtn';
                    btn.textContent = '–';
                    btn.onclick = () => {
                        grupo.remove();
                        atualizarTodosAlunos();
                    };
                }
            });
        }

        // Adicionar palavra
        function addPalavra() {
            const ultimo = palavraContainer.querySelector('.input-group:last-child');
            const novo = ultimo.cloneNode(true);
            novo.querySelector('select').selectedIndex = 0;
            palavraContainer.appendChild(novo);
            atualizarTodosPalavras();
        }

        function atualizarTodosPalavras() {
            const grupos = palavraContainer.querySelectorAll('.input-group');
            grupos.forEach((grupo, i) => {
                const btn = grupo.querySelector('.btn');
                if (i === grupos.length - 1) {
                    btn.className = 'btn btn-success addPalavraBtn';
                    btn.textContent = '+';
                    btn.onclick = addPalavra;
                } else {
                    btn.className = 'btn btn-danger removePalavraBtn';
                    btn.textContent = '–';
                    btn.onclick = () => {
                        grupo.remove();
                        atualizarTodosPalavras();
                    };
                }
            });
        }

        // Autocomplete aluno
        function configurarAutoComplete(input) {
            const lista = input.parentNode.querySelector('.sugestoes');
            input.addEventListener('input', async () => {
                const termo = input.value.trim();
                if (termo.length < 2) {
                    lista.style.display = 'none';
                    return;
                }
                const res = await fetch(`/buscarAlunos?termo=${encodeURIComponent(termo)}`);
                const alunos = await res.json();
                lista.innerHTML = alunos.map(a =>
                    `<li class="list-group-item list-group-item-action" data-id="${a.id}">${a.nome} (${a.login})</li>`
                ).join('');
                lista.style.display = 'block';
                lista.querySelectorAll('li').forEach(li => {
                    li.addEventListener('click', () => {
                        input.value = li.textContent.split('(')[0].trim();
                        input.closest('.input-group').querySelector('.aluno-id').value = li.dataset.id;
                        lista.style.display = 'none';
                    });
                });
            });
        }

        alunoContainer.querySelectorAll('.aluno-input').forEach(configurarAutoComplete);

        // Inicializar
        atualizarTodosAlunos();
        atualizarTodosPalavras();
    });

</script>
